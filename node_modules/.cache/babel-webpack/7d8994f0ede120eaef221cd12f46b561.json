{"ast":null,"code":"import { increase, decrease, reset } from '../counter.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport class StoreComponent {\n  constructor(store) {\n    this.store = store;\n    this.countIncr$ = store.select('countIncr');\n    this.countDecr$ = store.select('counterDecr');\n  }\n\n  increase() {\n    this.store.dispatch(increase());\n  }\n\n  decrease() {\n    this.store.dispatch(decrease());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n\n  change() {\n    console.log('Do nothing in reducer');\n  }\n\n}\n\nStoreComponent.ɵfac = function StoreComponent_Factory(t) {\n  return new (t || StoreComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nStoreComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StoreComponent,\n  selectors: [[\"app-store\"]],\n  decls: 14,\n  vars: 6,\n  consts: [[3, \"click\"]],\n  template: function StoreComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"store works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function StoreComponent_Template_button_click_2_listener() {\n        return ctx.increase();\n      });\n      i0.ɵɵtext(3, \"Increase\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\");\n      i0.ɵɵtext(8);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function StoreComponent_Template_button_click_10_listener() {\n        return ctx.decrease();\n      });\n      i0.ɵɵtext(11, \"Decrease\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function StoreComponent_Template_button_click_12_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵtext(13, \"Reset Counter\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"Current Counter1: \", i0.ɵɵpipeBind1(6, 2, ctx.countIncr$), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Current Counter2: \", i0.ɵɵpipeBind1(9, 4, ctx.countDecr$), \"\");\n    }\n  },\n  pipes: [i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdG9yZS5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["/home/alex/projects/angular/my-app/src/app/store/store.component.ts","/home/alex/projects/angular/my-app/src/app/store/store.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { change, increase, decrease, reset } from '../counter.actions';\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.scss']\n})\nexport class StoreComponent {\n\n  countIncr$: Observable<number>\n  countDecr$: Observable<number>\n\n  constructor(private store: Store<{ countIncr$: number, countDecr$: number }>) {\n    this.countIncr$ = store.select('countIncr');\n    this.countDecr$ = store.select('counterDecr');\n  }\n  increase() {\n    this.store.dispatch(increase());\n  }\n\n  decrease() {\n    this.store.dispatch(decrease());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n\n  change() {\n    console.log('Do nothing in reducer')\n  }\n\n}\n","<p>store works!</p>\n\n<button (click)=\"increase()\">Increase</button>\n\n<div>Current Counter1: {{ countIncr$ | async }}</div>\n<div>Current Counter2: {{ countDecr$ | async }}</div>\n\n<button (click)=\"decrease()\">Decrease</button>\n\n<button (click)=\"reset()\">Reset Counter</button>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}